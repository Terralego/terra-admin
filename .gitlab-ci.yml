image: node:12.16 # Should match .nvmrc content

variables:
  FF_NETWORK_PER_BUILD: 1
  POSTGRES_DB: dev
  POSTGRES_USER: dev
  POSTGRES_PASSWORD: dev
  POSTGRES_HOST: postgres
  PGPORT: 5432
  SECRET_KEY: dev-dev-dev
  DJANGO_SETTINGS_MODULE: project.settings.dev
  TERRA_TILES_HOSTNAMES: http://127.0.0.1:3000
  DOMAIN_NAME: backend
  LANG: C.UTF-8
  TZ: Europe/Paris

stages:
  - prepare
  - deploy

before_script:
  - node --version
  - npm --version
  - ls -alh

# Tests stage

Tests:
  before_script:
    - npm ci
  tags: [shared-ci-docker]
  stage: prepare
  script:
    - npm run test
  coverage: /All files[^|]*\|[^|]*\s+([\d\.]+)/

E2E:
  tags: [shared-ci-docker]
  stage: prepare
  image: cypress/base:12.16.2
  services:
    - name: pgrouting/pgrouting:12-3.0-3.1.0
      alias: postgres
    - name: geocrud/back:latest
      alias: backend
      entrypoint: [ "/app/venv/bin/python", "./manage.py", "loaddata", "/app/public/data/fixtures/demo.json" ]
      command: [ "/app/venv/bin/python", "./manage.py", "runserver", "0.0.0.0:8000" ]
  before_script:
    - npm ci
    - echo "REACT_APP_API_HOST=http://backend:8000/" >> .env
    - (npm run start&)
  script:
    - $(npm bin)/cypress run

Lint:
  before_script:
    - npm ci
  tags: [shared-ci-docker]
  stage: prepare
  script:
    - npm run lint

Build:
  before_script:
    - npm ci
  tags: [shared-ci-docker]
  stage: prepare
  variables:
    PUBLIC_URL: "/admin/"
  script:
    - npm run build
  artifacts:
    expire_in: 3 days
    paths:
      - build/

.deploy: &deploy # Deploy template
  tags: [shared-ci-docker]
  stage: deploy
  when: manual
  variables:
    SITE_ID: "yournamehere.netlify.com"
  dependencies:
    - Build
  script:
    - mkdir ./tmp
    - mv ./build ./tmp/admin
    - mv ./tmp/admin/_* ./tmp
    - npm i -g netlify-cli@2.40
    - npx netlify deploy --site=$SITE_ID --auth=$NETLIFY_ACCESS_TOKEN  --dir=./tmp --prod

Deploy Dev (force): &deploy_predev
  <<: *deploy
  environment:
    name: dev
    url: https://terra-admin-dev.netlify.com/admin
  variables:
    SITE_ID: "terra-admin-dev.netlify.com"

Deploy Dev:
  <<: *deploy_predev
  only:
    - master
  when: always

Deploy QA:
  <<: *deploy
  only:
    - master
  environment:
    name: qa
    url: https://terra-admin-qa.netlify.com/admin
  variables:
    SITE_ID: "terra-admin-qa.netlify.com"

Deploy Staging:
  <<: *deploy
  only:
    - master
  environment:
    name: staging
    url: https://terra-admin-staging.netlify.com/admin
  variables:
    SITE_ID: "terra-admin-staging.netlify.com"

Deploy Prod:
  <<: *deploy
  only:
    - master
  environment:
    name: prod
    url: https://terra-admins.netlify.com/admin
  variables:
    SITE_ID: "terra-admin.netlify.com"
